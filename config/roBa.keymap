#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&lt 1 Q           &kp W         &kp E    &kp R         &lt 2 T                                      &kp Y  &kp U  &kp I      &kp O    &kp P
&mt LSHIFT A      &kp S         &kp D    &kp F         &lt 5 G    &kp LS(LG(S))      &kp SEMICOLON  &kp H  &kp J  &kp K      &kp L    &kp ENTER
&mt LEFT_SHIFT Z  &kp X         &kp C    &kp V         &kp B      &kp F8             &kp SEMICOLON  &kp N  &kp M  &kp COMMA  &kp DOT  &kp BACKSPACE
&kp LCTRL         &kp LEFT_ALT  &kp TAB  &kp LEFT_GUI  &kp GRAVE  &kp SPACE          &kp BACKSPACE  &to 2                             &to 6
            >;

            sensor-bindings = <&inc_dec_kp PAGE_DOWN PAGE_UP>;
        };

        FUNCTION {
            bindings = <
&none  &none  &none  &none  &none                                   &kp F1  &kp EXCLAMATION  &kp LEFT_BRACKET      &kp EQUAL   &kp F5
&none  &none  &none  &none  &none           &none          &kp F13  &kp F6  &kp QUESTION     &kp NON_US_BACKSLASH  &kp LS(N8)  &kp F10
&none  &none  &none  &none  &none           &none          &trans   &trans  &kp UNDER        &kp LS(N8)            &kp LS(N9)  &kp F11
&none  &none  &none  &none  &kp LANGUAGE_4  &kp SPACE      &trans   &trans                                                     &kp F12
            >;

            sensor-bindings = <&inc_dec_kp K_SCROLL_DOWN K_SCROLL_UP>;
        };

        NUM {
            bindings = <
&none  &none  &none     &kp UP    &kp PLUS                                              &kp N7        &kp N8        &kp N9        &kp ASTERISK  &kp SLASH
&none  &none  &kp LEFT  &kp DOWN  &kp RIGHT    &kp LC(LA(KP_NUMBER_0))      &kp PERIOD  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp MINUS     &kp ENTER
&none  &none  &none     &none     &kp PERCENT  &kp EQUAL                    &kp COMMA   &kp N1        &kp NUMBER_2  &kp NUMBER_3  &kp PLUS      &kp BACKSPACE
&none  &none  &none     &none     &kp GRAVE    &kp SPACE                    &kp N0      &to 0                                                   &trans
            >;

            sensor-bindings = <&inc_dec_kp PAGE_DOWN PAGE_UP>;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans  &trans  &trans  &trans  &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans    &trans     &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &mkp MB4  &mkp LCLK  &mkp RCLK  &none   &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans    &mkp LCLK  &mkp RCLK  &none   &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                  &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                                   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &bt BT_CLR_ALL      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &bt BT_CLR          &bootloader  &trans        &trans        &trans        &trans        &trans
&trans  &trans        &trans        &trans        &trans  &trans              &trans       &trans                                                  &to 0
            >;
        };
    };
};
